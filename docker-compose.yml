services:
  ai-platform:
    build: .
    ports:
      - "8000:8000"
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - LLM_MODEL=llama3.1:8b
      - LLM_READ_TIMEOUT=300
      - LLM_NUM_PREDICT=160
      - LLM_TEMPERATURE=0.2
    depends_on:
      ollama:
        condition: service_healthy
      prometheus:
        condition: service_started
    networks:
      - observability-net
    volumes:
      - ./knowledge:/app/knowledge
    command: python main.py

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    networks:
      - observability-net
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=30m
      - OLLAMA_NUM_PARALLEL=1
      - OLLAMA_MAX_LOADED_MODELS=1
    healthcheck:
      test: ["CMD-SHELL", "env -u OLLAMA_HOST /bin/ollama ps >/dev/null 2>&1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s

  ollama-model-init:
    image: curlimages/curl:8.8.0
    command: >
      sh -c '
      until curl -sf http://ollama:11434/api/version; do
        sleep 2;
      done;
      curl -sf -X POST http://ollama:11434/api/pull
        -H "Content-Type: application/json"
        -d "{\"name\":\"llama3.1:8b\"}" || true
      '
    depends_on:
      - ollama
    networks:
      - observability-net
    restart: "no"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro
      - ./generated_configs:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - observability-net

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    networks:
      - observability-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - observability-net

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - observability-net

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - observability-net
    depends_on:
      - loki

  blackbox:
    image: prom/blackbox-exporter:latest
    ports:
      - "9115:9115"
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    volumes:
      - ./blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    networks:
      - observability-net

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  ollama_data:

networks:
  observability-net:
    driver: bridge
